// flow-typed signature: cb5a75696aa53c529af193b75cd778ad
// flow-typed version: <<STUB>>/mobx-utils_v2.0.1/flow_v0.41.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'mobx-utils'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'mobx-utils' {
  declare type PromiseLike<R> = {|
    then: <U> (
      onFulfill?: (value: R) => PromiseLike<U> | U,
      onReject?: (error: any) => PromiseLike<U> | U
    ) => PromiseLike<U>,

    catch: <U> (
      onReject?: (error: any) => PromiseLike<U> | U
    ) => PromiseLike<R | U>,
  |}

  declare type IBasePromiseBasedObservable<T> = {|
    ...PromiseLike<T>,
    isPromiseBasedObservable: true,
    case: <U> (handlers: {pending?: () => U, fulfilled?: (t: T) => U, rejected?: (e: any) => U}) => U;
  |};

  declare type IPromiseBasedObservableStates<T> = ({|
    state: 'pending',
    value: typeof undefined,
  |} | {|
    state: 'fulfilled',
    value: T,
  |} | {|
    state: 'rejected',
    value: any,
  |});

  declare type IPromiseBasedObservable<T> = {|
    ...IBasePromiseBasedObservable<T>,
    ...IPromiseBasedObservableStates<T>,
  |};

  declare module.exports: {
    fromPromise: <T> (promise: Promise<T>) => IPromiseBasedObservable<V>,
    now: (interval: ?number) => number,
  };
}
