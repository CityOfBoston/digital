// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`methods submitRequest graphql failure 1`] = `
<RequestDialog
  description=""
  loopbackGraphql={[Function]}
  routeToServiceForm={[Function]}
  service={
    Object {
      "attributes": Array [
        Object {
          "code": "ST-CMTS",
          "conditionalValues": null,
          "dependencies": null,
          "description": "Please provide any other relevant information:",
          "required": false,
          "type": "TEXT",
          "validations": Array [],
          "values": null,
        },
        Object {
          "code": "INFO-CSIRMV1",
          "conditionalValues": null,
          "dependencies": null,
          "description": "**All cosmic incursion cases should be followed up with a phone call to Alpha Flight.**",
          "required": false,
          "type": "STRING",
          "validations": Array [],
          "values": null,
        },
        Object {
          "code": "SR-CSIRMV1",
          "conditionalValues": Array [],
          "dependencies": null,
          "description": "How many dimensions have been breached?",
          "required": true,
          "type": "SINGLEVALUELIST",
          "validations": Array [],
          "values": Array [
            Object {
              "key": "One",
              "name": "One",
            },
            Object {
              "key": "Two",
              "name": "Two",
            },
            Object {
              "key": "Three",
              "name": "Three",
            },
            Object {
              "key": "More than Three",
              "name": "More than Three",
            },
          ],
        },
      ],
      "code": "CSMCINC",
      "contactRequirement": "REQUIRED",
      "description": "Bad things getting in from other universes",
      "locationRequirement": "VISIBLE",
      "name": "Cosmic Incursion",
    }
  }
  serviceCode="CSMCINC"
  setLocationMapActive={[Function]}
  stage="submit"
  store={
    AppStore {
      "_liveAgentButtonId": "",
      "accessibility": Accessibility {
        "el": null,
        "messageListenerDisposer": null,
      },
      "addressSearch": AddressSearch {
        "searchPopupWidth": 0,
      },
      "allServices": AllServices {
        "groups": Array [
          Group {
            "description": "Help for pet owners, or issues with animals, rodents, and pests.",
            "id": "Animals",
            "name": "Animals",
          },
          Group {
            "description": "Have an issue with the price or measurement of gas, oil, or another product?",
            "id": "Fees-Pricing",
            "name": "Fees and pricing",
          },
          Group {
            "description": "You can report issues you see at restaurants and other eateries in the City.",
            "id": "Food",
            "name": "Food, restaurants, and eateries",
          },
          Group {
            "description": "Get help for a public safety or disability issue, or request a health inspection.",
            "id": "Health-Safety",
            "name": "Health, safety, and social services",
          },
          Group {
            "description": "File requests for repairs, permits, tree plantings, and even make donations.",
            "id": "Parks-Public",
            "name": "Parks and public space",
          },
          Group {
            "description": "We offer help to developers, homeowners, and renters on many issues.",
            "id": "Property-Construction",
            "name": "Property, housing, and construction",
          },
          Group {
            "description": "Have a problem with a City school bus? Want to see something repaired at a school?",
            "id": "Schools",
            "name": "Schools",
          },
          Group {
            "description": "Request a plow, ask for a space saver to be removed, or report an unshoveled sidewalk.",
            "id": "Snow",
            "name": "Snow or weather-related concerns",
          },
          Group {
            "description": "You can report issues with street signs and signals, and road and sidewalk conditions.",
            "id": "Streets-Sidewalks",
            "name": "Streets and sidewalks",
          },
          Group {
            "description": "We can help with requests about bikes, parking, accessible spots, and more.",
            "id": "Traffic-Vehicles",
            "name": "Traffic and vehicles",
          },
          Group {
            "description": "Do you need help with trash or recycling? Want us to clean up a part of the City?",
            "id": "Trash-Graffiti",
            "name": "Trash, recycling, and graffiti",
          },
          Group {
            "description": "We can help if you have a problem with your electricity, water, or gas.",
            "id": "Utilities",
            "name": "Utilities",
          },
          Group {
            "description": "General requests that don’t fit into a category.",
            "id": "Other",
            "name": "Other services",
          },
        ],
        "otherGroup": Group {
          "description": "These services have not yet been categorized",
          "id": "",
          "name": "Uncategorized services",
        },
      },
      "apiKeys": Object {
        "mapbox": Object {},
      },
      "browserLocation": BrowserLocation {
        "watchId": null,
      },
      "languages": Array [],
      "requestSearch": RequestSearch {
        "boundsSet": false,
        "boundsSetDisposer": null,
        "debouncedSearch": [Function],
        "mapMoved": false,
        "searchDisposer": null,
      },
      "siteAnalytics": SiteAnalytics {},
      "ui": Ui {
        "debouncedScrollY": 0,
        "handleResize": [Function],
        "handleScroll": [Function],
        "reduceMotion": false,
        "scrollY": 0,
        "visible": true,
        "visibleHeight": 9007199254740991,
        "visibleWidth": undefined,
      },
    }
  }
>
  <div
    className="css-15m5iw4"
  >
    <SideEffect(Head)>
      <Head />
    </SideEffect(Head)>
    <FormDialog
      narrow={false}
      noPadding={false}
    >
      <div
        className="p-a300 p-a800--xl br br-t400 br--y css-1qypc7t"
        style={Object {}}
      >
        <SubmitPane
          backUrl="/request?code=CSMCINC"
          backUrlAs="/request/CSMCINC"
          error={[Error: Error submitting]}
          state="error"
        >
          <div>
            <SectionHeader>
              <div
                className=" sh sh--y "
              >
                <h1
                  className="sh-title"
                >
                  Something’s Wrong!
                </h1>
              </div>
            </SectionHeader>
            <div
              className="m-v500 t--intro"
            >
              We couldn’t save your request because of
               
              these errors
              :
            </div>
            <div
              className="m-v500 t--info"
            >
              <div
                key="0"
              >
                <p
                  key="0"
                >
                  All required fields were missing
                </p>
              </div>
              <div
                key="1"
              >
                <p
                  key="1"
                >
                  Also your location is in Cambridge
                </p>
              </div>
            </div>
            <p
              className="m-v500"
            >
              You can
               
              <Link
                as="/request/CSMCINC"
                href="/request?code=CSMCINC"
              >
                <a
                  href="/request/CSMCINC"
                  onClick={[Function]}
                >
                  go back and update your request
                </a>
              </Link>
               
              and try again.
            </p>
          </div>
        </SubmitPane>
      </div>
    </FormDialog>
  </div>
</RequestDialog>
`;

exports[`methods submitRequest success 1`] = `
<RequestDialog
  description=""
  loopbackGraphql={[Function]}
  routeToServiceForm={[Function]}
  service={
    Object {
      "attributes": Array [
        Object {
          "code": "ST-CMTS",
          "conditionalValues": null,
          "dependencies": null,
          "description": "Please provide any other relevant information:",
          "required": false,
          "type": "TEXT",
          "validations": Array [],
          "values": null,
        },
        Object {
          "code": "INFO-CSIRMV1",
          "conditionalValues": null,
          "dependencies": null,
          "description": "**All cosmic incursion cases should be followed up with a phone call to Alpha Flight.**",
          "required": false,
          "type": "STRING",
          "validations": Array [],
          "values": null,
        },
        Object {
          "code": "SR-CSIRMV1",
          "conditionalValues": Array [],
          "dependencies": null,
          "description": "How many dimensions have been breached?",
          "required": true,
          "type": "SINGLEVALUELIST",
          "validations": Array [],
          "values": Array [
            Object {
              "key": "One",
              "name": "One",
            },
            Object {
              "key": "Two",
              "name": "Two",
            },
            Object {
              "key": "Three",
              "name": "Three",
            },
            Object {
              "key": "More than Three",
              "name": "More than Three",
            },
          ],
        },
      ],
      "code": "CSMCINC",
      "contactRequirement": "REQUIRED",
      "description": "Bad things getting in from other universes",
      "locationRequirement": "VISIBLE",
      "name": "Cosmic Incursion",
    }
  }
  serviceCode="CSMCINC"
  setLocationMapActive={[Function]}
  stage="submit"
  store={
    AppStore {
      "_liveAgentButtonId": "",
      "accessibility": Accessibility {
        "el": null,
        "messageListenerDisposer": null,
      },
      "addressSearch": AddressSearch {
        "searchPopupWidth": 0,
      },
      "allServices": AllServices {
        "groups": Array [
          Group {
            "description": "Help for pet owners, or issues with animals, rodents, and pests.",
            "id": "Animals",
            "name": "Animals",
          },
          Group {
            "description": "Have an issue with the price or measurement of gas, oil, or another product?",
            "id": "Fees-Pricing",
            "name": "Fees and pricing",
          },
          Group {
            "description": "You can report issues you see at restaurants and other eateries in the City.",
            "id": "Food",
            "name": "Food, restaurants, and eateries",
          },
          Group {
            "description": "Get help for a public safety or disability issue, or request a health inspection.",
            "id": "Health-Safety",
            "name": "Health, safety, and social services",
          },
          Group {
            "description": "File requests for repairs, permits, tree plantings, and even make donations.",
            "id": "Parks-Public",
            "name": "Parks and public space",
          },
          Group {
            "description": "We offer help to developers, homeowners, and renters on many issues.",
            "id": "Property-Construction",
            "name": "Property, housing, and construction",
          },
          Group {
            "description": "Have a problem with a City school bus? Want to see something repaired at a school?",
            "id": "Schools",
            "name": "Schools",
          },
          Group {
            "description": "Request a plow, ask for a space saver to be removed, or report an unshoveled sidewalk.",
            "id": "Snow",
            "name": "Snow or weather-related concerns",
          },
          Group {
            "description": "You can report issues with street signs and signals, and road and sidewalk conditions.",
            "id": "Streets-Sidewalks",
            "name": "Streets and sidewalks",
          },
          Group {
            "description": "We can help with requests about bikes, parking, accessible spots, and more.",
            "id": "Traffic-Vehicles",
            "name": "Traffic and vehicles",
          },
          Group {
            "description": "Do you need help with trash or recycling? Want us to clean up a part of the City?",
            "id": "Trash-Graffiti",
            "name": "Trash, recycling, and graffiti",
          },
          Group {
            "description": "We can help if you have a problem with your electricity, water, or gas.",
            "id": "Utilities",
            "name": "Utilities",
          },
          Group {
            "description": "General requests that don’t fit into a category.",
            "id": "Other",
            "name": "Other services",
          },
        ],
        "otherGroup": Group {
          "description": "These services have not yet been categorized",
          "id": "",
          "name": "Uncategorized services",
        },
      },
      "apiKeys": Object {
        "mapbox": Object {},
      },
      "browserLocation": BrowserLocation {
        "watchId": null,
      },
      "languages": Array [],
      "requestSearch": RequestSearch {
        "boundsSet": false,
        "boundsSetDisposer": null,
        "debouncedSearch": [Function],
        "mapMoved": false,
        "searchDisposer": null,
      },
      "siteAnalytics": SiteAnalytics {},
      "ui": Ui {
        "debouncedScrollY": 0,
        "handleResize": [Function],
        "handleScroll": [Function],
        "reduceMotion": false,
        "scrollY": 0,
        "visible": true,
        "visibleHeight": 9007199254740991,
        "visibleWidth": undefined,
      },
    }
  }
>
  <div
    className="css-15m5iw4"
  >
    <SideEffect(Head)>
      <Head />
    </SideEffect(Head)>
    <FormDialog
      narrow={false}
      noPadding={false}
    >
      <div
        className="p-a300 p-a800--xl br br-t400 br--y css-1qypc7t"
        style={Object {}}
      >
        <SubmitPane
          state="submitting"
          ui={
            Ui {
              "debouncedScrollY": 0,
              "handleResize": [Function],
              "handleScroll": [Function],
              "reduceMotion": false,
              "scrollY": 0,
              "visible": true,
              "visibleHeight": 9007199254740991,
              "visibleWidth": undefined,
            }
          }
        >
          <div>
            <SectionHeader>
              <div
                className=" sh sh--y "
              >
                <h1
                  className="sh-title"
                >
                  Submitting…
                </h1>
              </div>
            </SectionHeader>
            <div
              className="t--intro m-v500"
            >
              Please wait while we save your request.
            </div>
            <div
              className="m-v500 p-a500 css-1f99mjs"
            >
              <LoadingBuildings
                reduceMotion={false}
              >
                <VelocityTransitionGroup
                  className="css-6ezlc4"
                  enter={
                    Object {
                      "animation": Object {
                        "opacity": 1,
                        "translateX": Array [
                          0,
                          "30%",
                        ],
                      },
                      "begin": [Function],
                      "delay": 510,
                      "duration": 500,
                      "style": Object {
                        "display": "none",
                      },
                    }
                  }
                  enterHideStyle={
                    Object {
                      "display": "none",
                    }
                  }
                  enterShowStyle={
                    Object {
                      "display": "",
                    }
                  }
                  leave={
                    Object {
                      "animation": Object {
                        "opacity": 0,
                        "translateX": "-30%",
                      },
                      "duration": 500,
                    }
                  }
                  runOnMount={true}
                >
                  <TransitionGroup
                    childFactory={[Function]}
                    className="css-6ezlc4"
                    component="span"
                  >
                    <span
                      className="css-6ezlc4"
                    >
                      <svg
                        className="css-1rr4qq7"
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "<use xlink:href=\\"/assets/img/svg/loading-buildings.svg#allston\\" height=\\"100%\\"></use>",
                          }
                        }
                        key=".$allston"
                        role="img"
                      />
                    </span>
                  </TransitionGroup>
                </VelocityTransitionGroup>
              </LoadingBuildings>
            </div>
          </div>
        </SubmitPane>
      </div>
    </FormDialog>
  </div>
</RequestDialog>
`;

exports[`methods submitRequest success 2`] = `
<RequestDialog
  description=""
  loopbackGraphql={[Function]}
  routeToServiceForm={[Function]}
  service={
    Object {
      "attributes": Array [
        Object {
          "code": "ST-CMTS",
          "conditionalValues": null,
          "dependencies": null,
          "description": "Please provide any other relevant information:",
          "required": false,
          "type": "TEXT",
          "validations": Array [],
          "values": null,
        },
        Object {
          "code": "INFO-CSIRMV1",
          "conditionalValues": null,
          "dependencies": null,
          "description": "**All cosmic incursion cases should be followed up with a phone call to Alpha Flight.**",
          "required": false,
          "type": "STRING",
          "validations": Array [],
          "values": null,
        },
        Object {
          "code": "SR-CSIRMV1",
          "conditionalValues": Array [],
          "dependencies": null,
          "description": "How many dimensions have been breached?",
          "required": true,
          "type": "SINGLEVALUELIST",
          "validations": Array [],
          "values": Array [
            Object {
              "key": "One",
              "name": "One",
            },
            Object {
              "key": "Two",
              "name": "Two",
            },
            Object {
              "key": "Three",
              "name": "Three",
            },
            Object {
              "key": "More than Three",
              "name": "More than Three",
            },
          ],
        },
      ],
      "code": "CSMCINC",
      "contactRequirement": "REQUIRED",
      "description": "Bad things getting in from other universes",
      "locationRequirement": "VISIBLE",
      "name": "Cosmic Incursion",
    }
  }
  serviceCode="CSMCINC"
  setLocationMapActive={[Function]}
  stage="submit"
  store={
    AppStore {
      "_liveAgentButtonId": "",
      "accessibility": Accessibility {
        "el": null,
        "messageListenerDisposer": null,
      },
      "addressSearch": AddressSearch {
        "searchPopupWidth": 0,
      },
      "allServices": AllServices {
        "groups": Array [
          Group {
            "description": "Help for pet owners, or issues with animals, rodents, and pests.",
            "id": "Animals",
            "name": "Animals",
          },
          Group {
            "description": "Have an issue with the price or measurement of gas, oil, or another product?",
            "id": "Fees-Pricing",
            "name": "Fees and pricing",
          },
          Group {
            "description": "You can report issues you see at restaurants and other eateries in the City.",
            "id": "Food",
            "name": "Food, restaurants, and eateries",
          },
          Group {
            "description": "Get help for a public safety or disability issue, or request a health inspection.",
            "id": "Health-Safety",
            "name": "Health, safety, and social services",
          },
          Group {
            "description": "File requests for repairs, permits, tree plantings, and even make donations.",
            "id": "Parks-Public",
            "name": "Parks and public space",
          },
          Group {
            "description": "We offer help to developers, homeowners, and renters on many issues.",
            "id": "Property-Construction",
            "name": "Property, housing, and construction",
          },
          Group {
            "description": "Have a problem with a City school bus? Want to see something repaired at a school?",
            "id": "Schools",
            "name": "Schools",
          },
          Group {
            "description": "Request a plow, ask for a space saver to be removed, or report an unshoveled sidewalk.",
            "id": "Snow",
            "name": "Snow or weather-related concerns",
          },
          Group {
            "description": "You can report issues with street signs and signals, and road and sidewalk conditions.",
            "id": "Streets-Sidewalks",
            "name": "Streets and sidewalks",
          },
          Group {
            "description": "We can help with requests about bikes, parking, accessible spots, and more.",
            "id": "Traffic-Vehicles",
            "name": "Traffic and vehicles",
          },
          Group {
            "description": "Do you need help with trash or recycling? Want us to clean up a part of the City?",
            "id": "Trash-Graffiti",
            "name": "Trash, recycling, and graffiti",
          },
          Group {
            "description": "We can help if you have a problem with your electricity, water, or gas.",
            "id": "Utilities",
            "name": "Utilities",
          },
          Group {
            "description": "General requests that don’t fit into a category.",
            "id": "Other",
            "name": "Other services",
          },
        ],
        "otherGroup": Group {
          "description": "These services have not yet been categorized",
          "id": "",
          "name": "Uncategorized services",
        },
      },
      "apiKeys": Object {
        "mapbox": Object {},
      },
      "browserLocation": BrowserLocation {
        "watchId": null,
      },
      "languages": Array [],
      "requestSearch": RequestSearch {
        "boundsSet": false,
        "boundsSetDisposer": null,
        "debouncedSearch": [Function],
        "mapMoved": false,
        "searchDisposer": null,
      },
      "siteAnalytics": SiteAnalytics {},
      "ui": Ui {
        "debouncedScrollY": 0,
        "handleResize": [Function],
        "handleScroll": [Function],
        "reduceMotion": false,
        "scrollY": 0,
        "visible": true,
        "visibleHeight": 9007199254740991,
        "visibleWidth": undefined,
      },
    }
  }
>
  <div
    className="css-15m5iw4"
  >
    <SideEffect(Head)>
      <Head />
    </SideEffect(Head)>
    <FormDialog
      narrow={false}
      noPadding={false}
    >
      <div
        className="p-a300 p-a800--xl br br-t400 br--y css-1qypc7t"
        style={Object {}}
      >
        <CaseView
          noMap={false}
          request={
            Object {
              "address": "City Hall Plaza, Boston, MA 02131",
              "closureComment": "Found Thanos. Smashed him into the floor with all of us standing around.",
              "closureReason": "Case Resolved",
              "description": "I think that Thanos is here",
              "expectedAtString": null,
              "id": "17-000000001",
              "images": Array [
                Object {
                  "originalUrl": "https://pbs.twimg.com/media/C22X9ODXgAABGKS.jpg",
                  "squarePreviewUrl": "https://pbs.twimg.com/media/C22X9ODXgAABGKS.jpg",
                  "tags": Array [],
                },
              ],
              "location": Object {
                "lat": 42.359927299999995,
                "lng": -71.0576853,
              },
              "requestedAtString": "March 7, 2017, 12:59 PM",
              "service": Object {
                "code": "CSMCINC",
                "name": "Cosmic Intervention",
              },
              "serviceNotice": null,
              "status": "closed",
              "updatedAtString": "April 8, 2017, 12:59 PM",
            }
          }
          store={
            AppStore {
              "_liveAgentButtonId": "",
              "accessibility": Accessibility {
                "el": null,
                "messageListenerDisposer": null,
              },
              "addressSearch": AddressSearch {
                "searchPopupWidth": 0,
              },
              "allServices": AllServices {
                "groups": Array [
                  Group {
                    "description": "Help for pet owners, or issues with animals, rodents, and pests.",
                    "id": "Animals",
                    "name": "Animals",
                  },
                  Group {
                    "description": "Have an issue with the price or measurement of gas, oil, or another product?",
                    "id": "Fees-Pricing",
                    "name": "Fees and pricing",
                  },
                  Group {
                    "description": "You can report issues you see at restaurants and other eateries in the City.",
                    "id": "Food",
                    "name": "Food, restaurants, and eateries",
                  },
                  Group {
                    "description": "Get help for a public safety or disability issue, or request a health inspection.",
                    "id": "Health-Safety",
                    "name": "Health, safety, and social services",
                  },
                  Group {
                    "description": "File requests for repairs, permits, tree plantings, and even make donations.",
                    "id": "Parks-Public",
                    "name": "Parks and public space",
                  },
                  Group {
                    "description": "We offer help to developers, homeowners, and renters on many issues.",
                    "id": "Property-Construction",
                    "name": "Property, housing, and construction",
                  },
                  Group {
                    "description": "Have a problem with a City school bus? Want to see something repaired at a school?",
                    "id": "Schools",
                    "name": "Schools",
                  },
                  Group {
                    "description": "Request a plow, ask for a space saver to be removed, or report an unshoveled sidewalk.",
                    "id": "Snow",
                    "name": "Snow or weather-related concerns",
                  },
                  Group {
                    "description": "You can report issues with street signs and signals, and road and sidewalk conditions.",
                    "id": "Streets-Sidewalks",
                    "name": "Streets and sidewalks",
                  },
                  Group {
                    "description": "We can help with requests about bikes, parking, accessible spots, and more.",
                    "id": "Traffic-Vehicles",
                    "name": "Traffic and vehicles",
                  },
                  Group {
                    "description": "Do you need help with trash or recycling? Want us to clean up a part of the City?",
                    "id": "Trash-Graffiti",
                    "name": "Trash, recycling, and graffiti",
                  },
                  Group {
                    "description": "We can help if you have a problem with your electricity, water, or gas.",
                    "id": "Utilities",
                    "name": "Utilities",
                  },
                  Group {
                    "description": "General requests that don’t fit into a category.",
                    "id": "Other",
                    "name": "Other services",
                  },
                ],
                "otherGroup": Group {
                  "description": "These services have not yet been categorized",
                  "id": "",
                  "name": "Uncategorized services",
                },
              },
              "apiKeys": Object {
                "mapbox": Object {},
              },
              "browserLocation": BrowserLocation {
                "watchId": null,
              },
              "languages": Array [],
              "requestSearch": RequestSearch {
                "boundsSet": false,
                "boundsSetDisposer": null,
                "debouncedSearch": [Function],
                "mapMoved": false,
                "searchDisposer": null,
              },
              "siteAnalytics": SiteAnalytics {},
              "ui": Ui {
                "debouncedScrollY": 0,
                "handleResize": [Function],
                "handleScroll": [Function],
                "reduceMotion": false,
                "scrollY": 0,
                "visible": true,
                "visibleHeight": 9007199254740991,
                "visibleWidth": undefined,
              },
            }
          }
          submitted={true}
        >
          <div>
            <div>
              <SectionHeader
                subtitle={
                  <span
                    style={
                      Object {
                        "whiteSpace": "nowrap",
                      }
                    }
                  >
                    Case ref: #17-000000001
                  </span>
                }
              >
                <div
                  className=" sh sh--y "
                >
                  <h1
                    className="sh-title"
                  >
                    Cosmic Intervention
                  </h1>
                  <div
                    className="sh-contact"
                  >
                    <span
                      style={
                        Object {
                          "whiteSpace": "nowrap",
                        }
                      }
                    >
                      Case ref: #17-000000001
                    </span>
                  </div>
                </div>
              </SectionHeader>
              <div
                className="m-v300 t--info"
              >
                Submitted on March 7, 2017, 12:59 PM
                 — 
                City Hall Plaza, Boston, MA 02131
              </div>
            </div>
            <div
              className="b b--g p-a500 m-v500"
            >
              <div
                className="txt-l"
                style={
                  Object {
                    "marginTop": 0,
                  }
                }
              >
                Request submitted successfully — 
                April 8, 2017, 12:59 PM
              </div>
              <div
                className="t--intro"
                style={
                  Object {
                    "fontStyle": "normal",
                  }
                }
              >
                Thank you for submitting. Your case reference number is #
                17-000000001
                . If you gave your email address, we’ll send you an email when it’s resolved. You can also bookmark this page to check back on it.
              </div>
            </div>
            <div
              className="m-v500"
            >
              <div
                className="txt-l"
              >
                Description
              </div>
              <div
                className="t--intro"
                style={
                  Object {
                    "fontStyle": "normal",
                  }
                }
              >
                I think that Thanos is here
              </div>
            </div>
            <div
              className="g m-v400"
            >
              <div
                className="g--6"
              >
                <div
                  className="css-1cc52qw m-b500"
                >
                  <img
                    alt="Map of City Hall Plaza, Boston, MA 02131"
                    className="css-bitd7o css-t37t6d br br-a150"
                    src="https://api.mapbox.com/styles/v1/undefined/static/-71.0576853,42.359927299999995,15/440x440@2x?attribution=false&logo=false&access_token=undefined"
                  />
                  <div
                    className="css-oixmdu"
                    dangerouslySetInnerHTML={
                      Object {
                        "__html": "
    <svg role=\\"img\\" class=\\"css-uwwqev\\">
      <use xlink:href=\\"/assets/img/svg/waypoints.svg#orange-filled\\" height=\\"100%\\" />
    </svg>
  ",
                      }
                    }
                  />
                </div>
              </div>
              <div
                className="g--6"
                key="https://pbs.twimg.com/media/C22X9ODXgAABGKS.jpg"
              >
                <a
                  className="css-1bx5ylf br br-a150 m-b500"
                  href="https://pbs.twimg.com/media/C22X9ODXgAABGKS.jpg"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  <img
                    alt="Photo describing request or resolution"
                    className="css-bitd7o"
                    src="https://pbs.twimg.com/media/C22X9ODXgAABGKS.jpg"
                  />
                </a>
              </div>
            </div>
          </div>
        </CaseView>
      </div>
    </FormDialog>
  </div>
</RequestDialog>
`;

exports[`rendering contact 1`] = `
<div
  className="css-15m5iw4"
>
  <div
    className="p-a300 p-a800--xl br br-t400 br--y css-1qypc7t"
    style={
      Object {
        "maxWidth": 800,
      }
    }
  >
    <form
      onSubmit={[Function]}
    >
      <div>
        <div
          className=" sh sh--y "
        >
          <h1
            className="sh-title"
          >
            Cosmic Incursion
          </h1>
        </div>
        <p
          className="m-v300 t--info"
        >
          Why are we asking for your contact information? We’ll use it to email you about the status of your report. We may also have to follow up with you.
        </p>
        <p
          className="m-v300 t--subinfo"
        >
          <strong>
            We won’t make your information public.
          </strong>
           
        </p>
        <div
          className="txt"
        >
          <label
            className="txt-l"
            htmlFor="ContactPane-firstName"
          >
            First Name 
            <span
              className="t--req"
            >
              Required
            </span>
          </label>
          <input
            aria-required={true}
            className="txt-f"
            id="ContactPane-firstName"
            name="firstName"
            onChange={[Function]}
            placeholder="First Name"
            type="text"
            value=""
          />
        </div>
        <div
          className="txt"
        >
          <label
            className="txt-l"
            htmlFor="ContactPane-lastName"
          >
            Last Name 
            <span
              className="t--req"
            >
              Required
            </span>
          </label>
          <input
            aria-required={true}
            className="txt-f"
            id="ContactPane-lastName"
            name="lastName"
            onChange={[Function]}
            placeholder="Last Name"
            type="text"
            value=""
          />
        </div>
        <div
          className="txt"
        >
          <label
            className="txt-l"
            htmlFor="ContactPane-email"
          >
            Email 
            <span
              className="t--req"
            >
              Required
            </span>
          </label>
          <input
            aria-required={true}
            className="txt-f"
            id="ContactPane-email"
            name="email"
            onChange={[Function]}
            placeholder="Email"
            type="email"
            value=""
          />
        </div>
        <div
          className="txt"
        >
          <label
            className="txt-l"
            htmlFor="ContactPane-phone"
          >
            Phone
          </label>
          <input
            className="txt-f"
            id="ContactPane-phone"
            name="phone"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onPaste={[Function]}
            placeholder="Phone"
            type="tel"
            value=""
          />
        </div>
        <div
          className="m-v500 g"
        >
          <div
            className="cb"
          >
            <input
              checked={false}
              className="cb-f"
              id="ContactPane-remember"
              name="remember"
              onChange={[Function]}
              type="checkbox"
              value="true"
            />
            <label
              className="cb-l"
              htmlFor="ContactPane-remember"
            >
              Remember contact info on this computer
            </label>
          </div>
        </div>
      </div>
      <div
        className="g m-v500 css-zcxndt"
      >
        <div
          className="g--8 t--info m-v200 css-1gz4i5v"
        >
          <span>
            Please fill out 
            <span
              className="t--req"
            >
              required
            </span>
             fields to continue
          </span>
        </div>
        <button
          className="btn g--4"
          disabled={true}
          type="submit"
        >
          Submit Request
        </button>
      </div>
    </form>
  </div>
</div>
`;

exports[`rendering location 1`] = `
<div
  className="css-18ppl9p"
>
  <div
    className=" br br-t400 br--y css-1qypc7t"
    style={Object {}}
  >
    <div
      className="css-1v26nfd"
    >
      <div
        className="css-1gx8zcz"
      >
        <div
          className="p-a300"
        >
          <form
            action="#"
            className="sf sf--md sf--y"
            onSubmit={[Function]}
          >
            <div
              className="sf-i"
            >
              <input
                aria-label="Address search field"
                className="sf-i-f"
                onChange={[Function]}
                placeholder="Search address…"
                type="text"
                value=""
              />
              <button
                className="sf-i-b"
                disabled={true}
                type="submit"
              >
                Search
              </button>
            </div>
          </form>
        </div>
        <div
          className="css-1d3uvm0"
        />
        <div
          className="g p-a300 css-zcxndt"
        >
          <div
            className="g--7 t--subinfo m-v200"
          >
            <a
              href="javascript:void(0)"
              onClick={[Function]}
            >
              Continue without location
            </a>
          </div>
          <button
            className="btn g--5"
            disabled={true}
            onClick={[Function]}
            type="button"
          >
            Next
          </button>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`rendering questions 1`] = `
<div
  className="css-15m5iw4"
>
  <div
    className="p-a300 p-a800--xl br br-t400 br--y css-1qypc7t"
    style={Object {}}
  >
    <form
      onSubmit={[Function]}
    >
      <div
        className=" sh sh--y "
      >
        <h1
          className="sh-title"
        >
          Cosmic Incursion
        </h1>
      </div>
      <div
        className="t--intro m-v300"
      >
        Bad things getting in from other universes
      </div>
      <div
        className="g g--top"
      >
        <div
          className="g--7 m-v500"
        >
          <div
            className="txt"
          >
            <label
              className="txt-l"
              htmlFor="QuestionsPane-description"
              style={
                Object {
                  "marginTop": 0,
                }
              }
            >
              Describe your request
            </label>
            <textarea
              className="txt-f"
              id="QuestionsPane-description"
              name="description"
              onChange={[Function]}
              placeholder="What can we help with?"
              rows="5"
              value=""
            />
          </div>
          <div>
            <div
              className="txt"
            >
              <label
                className="txt-l"
                htmlFor="ST-CMTS"
              >
                Please provide any other relevant information:
                 
              </label>
              <textarea
                aria-required={false}
                className="txt-f"
                id="ST-CMTS"
                name="ST-CMTS"
                onChange={[Function]}
                rows="5"
                value=""
              />
            </div>
          </div>
          <hr
            aria-hidden={true}
            className="hr hr--dash m-v500"
          />
          <div>
            <div
              className="txt"
            >
              <label
                className="txt-l"
                htmlFor="INFO-CSIRMV1"
              >
                **All cosmic incursion cases should be followed up with a phone call to Alpha Flight.**
                 
              </label>
              <input
                aria-required={false}
                className="txt-f "
                id="INFO-CSIRMV1"
                name="INFO-CSIRMV1"
                onChange={[Function]}
                type="text"
                value=""
              />
            </div>
          </div>
          <hr
            aria-hidden={true}
            className="hr hr--dash m-v500"
          />
          <div>
            <div
              aria-labelledby="SR-CSIRMV1-label"
              role="radiogroup"
            >
              <div
                className="m-v300"
              >
                <label
                  className="txt-l"
                  id="SR-CSIRMV1-label"
                >
                  How many dimensions have been breached?
                   
                  <span
                    className="t--req"
                  >
                    Required
                  </span>
                </label>
              </div>
              <div
                className="g"
              >
                <div
                  className="g--12"
                >
                  <div
                    className="ra"
                  >
                    <input
                      checked={false}
                      className="ra-f"
                      id="SR-CSIRMV1-One"
                      name="SR-CSIRMV1"
                      onChange={[Function]}
                      type="radio"
                      value="One"
                    />
                    <label
                      className="ra-l"
                      htmlFor="SR-CSIRMV1-One"
                    >
                      One
                    </label>
                  </div>
                  <div
                    className="ra"
                  >
                    <input
                      checked={false}
                      className="ra-f"
                      id="SR-CSIRMV1-Two"
                      name="SR-CSIRMV1"
                      onChange={[Function]}
                      type="radio"
                      value="Two"
                    />
                    <label
                      className="ra-l"
                      htmlFor="SR-CSIRMV1-Two"
                    >
                      Two
                    </label>
                  </div>
                  <div
                    className="ra"
                  >
                    <input
                      checked={false}
                      className="ra-f"
                      id="SR-CSIRMV1-Three"
                      name="SR-CSIRMV1"
                      onChange={[Function]}
                      type="radio"
                      value="Three"
                    />
                    <label
                      className="ra-l"
                      htmlFor="SR-CSIRMV1-Three"
                    >
                      Three
                    </label>
                  </div>
                  <div
                    className="ra"
                  >
                    <input
                      checked={false}
                      className="ra-f"
                      id="SR-CSIRMV1-More than Three"
                      name="SR-CSIRMV1"
                      onChange={[Function]}
                      type="radio"
                      value="More than Three"
                    />
                    <label
                      className="ra-l"
                      htmlFor="SR-CSIRMV1-More than Three"
                    >
                      More than Three
                    </label>
                  </div>
                  <span />
                </div>
              </div>
            </div>
          </div>
        </div>
        <div
          className="g--5 m-v500"
        >
          <div
            className="br br-a200"
          >
            <div
              aria-disabled={false}
              className="css-1xobwt1"
              onClick={[Function]}
              onDragEnter={[Function]}
              onDragLeave={[Function]}
              onDragOver={[Function]}
              onDragStart={[Function]}
              onDrop={[Function]}
              style={Object {}}
            >
              <img
                alt=""
                aria-hidden={true}
                height="324"
                src="/assets/img/image-upload.png"
                style={
                  Object {
                    "display": "block",
                    "height": "auto",
                    "width": "100%",
                  }
                }
                width="479"
              />
              <input
                accept="image/*"
                autoComplete="off"
                disabled={false}
                multiple={false}
                onChange={[Function]}
                style={
                  Object {
                    "display": "none",
                  }
                }
                type="file"
              />
            </div>
            <div
              className="br br-t200"
              style={
                Object {
                  "position": "relative",
                }
              }
            >
              <button
                className="btn btn--w btn--b"
                onClick={[Function]}
                style={
                  Object {
                    "visibility": "visible",
                    "width": "100%",
                  }
                }
                type="button"
              >
                Upload Photo
              </button>
            </div>
          </div>
        </div>
      </div>
      <div
        className="g m-v500 css-zcxndt"
      >
        <div
          className="g--9 t--info m-v200 css-1gz4i5v"
        >
          <span>
            Please fill out 
            <span
              className="t--req"
            >
              required
            </span>
             fields to continue
          </span>
        </div>
        <button
          className="btn g--3"
          disabled={true}
          type="submit"
        >
          Next
        </button>
      </div>
    </form>
  </div>
</div>
`;
